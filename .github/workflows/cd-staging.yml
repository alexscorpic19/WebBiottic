name: CD Staging

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://test.biottic.com.co
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Build
        run: |
          # Asegurar que el directorio de assets/images existe
          mkdir -p dist/assets/images
          # Build normal
          pnpm run build
          # Copiar imágenes después del build
          cp -r src/assets/images/* dist/assets/images/
        env:
          VITE_API_URL: ${{ secrets.STAGING_API_URL }}
          
      - name: Add host key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          
      - name: Deploy to Staging Server
        env:
          DEPLOY_HOST: ${{ secrets.SSH_HOST }}
          DEPLOY_USER: ${{ secrets.SSH_USER }}
          DEPLOY_PASS: ${{ secrets.SSH_PASS }}
        run: |
          tar -czf dist.tar.gz dist/
          sshpass -p "$DEPLOY_PASS" scp -o StrictHostKeyChecking=no dist.tar.gz $DEPLOY_USER@$DEPLOY_HOST:/tmp/
          sshpass -p "$DEPLOY_PASS" ssh -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST << 'EOF'
            rm -rf /home/admin/web/test.biottic.com.co/public_html/*
            cd /home/admin/web/test.biottic.com.co/public_html
            tar xzf /tmp/dist.tar.gz --strip-components=1
            rm /tmp/dist.tar.gz
            # Asegurar que el directorio de imágenes existe
            mkdir -p assets/images
            # Ajustar permisos
            chown -R admin:admin .
            find . -type d -exec chmod 755 {} \;
            find . -type f -exec chmod 644 {} \;
          EOF
