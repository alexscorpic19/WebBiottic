name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6
        ports:
          - 27017:27017

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '10.5.0'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.1'
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          echo "Node version: $(node -v)"
          echo "PNPM version: $(pnpm -v)"
          echo "Installing dependencies..."
          pnpm install --frozen-lockfile
          echo "Directory contents after install:"
          ls -la

      - name: Install Cypress
        run: |
          npx cypress install
          npx cypress verify
          npx cypress info

      - name: Show TypeScript version
        run: pnpm tsc --version

      - name: Type check
        run: pnpm tsc --noEmit

      - name: Run ESLint
        run: pnpm lint

      - name: Run unit tests
        run: pnpm test
        env:
          CI: true
          NODE_ENV: test
          MONGODB_URI: mongodb://localhost:27017/biottic-test

      - name: Build
        run: pnpm run build
        env:
          VITE_API_URL: 'http://localhost:3000/api'
          NODE_ENV: 'production'

      - name: Start servers
        run: |
          pnpm run dev & 
          pnpm run server &
          echo "Waiting for servers to start..."
          # Wait for Vite server
          timeout 60 bash -c 'until curl -s http://localhost:5174 > /dev/null; do sleep 2; done'
          # Wait for API server
          timeout 60 bash -c 'until curl -s http://localhost:3000/api/health > /dev/null; do sleep 2; done'
        env:
          MONGODB_URI: mongodb://localhost:27017/biottic-test
          NODE_ENV: test
          PORT: 3000
          VITE_PORT: 5174

      - name: Run Cypress
        run: pnpm exec cypress run --config-file cypress.ci.config.ts
        env:
          CYPRESS_BASE_URL: http://localhost:5174
          CYPRESS_API_URL: http://localhost:3000/api
          NODE_ENV: test

      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage
          path: coverage/
          retention-days: 30

      - name: Upload Cypress artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          path: |
            cypress/videos/
            cypress/screenshots/
          retention-days: 7

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 30

  security:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run SAST
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, typescript
          
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        
      - name: Run Dependency Check
        run: pnpm audit

  notify:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Check build status
        if: ${{ needs.test.result == 'failure' || needs.security.result == 'failure' }}
        run: exit 1
